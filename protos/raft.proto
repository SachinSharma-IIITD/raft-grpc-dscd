syntax = "proto3";

package raft;

message LogEntry {
    int64 term = 1;
    int64 index = 2;
    string data = 3;
}

message AppendEntriesReq {
    int64 term = 1;
    int64 leader_id = 2;
    int64 prev_log_index = 3;
    int64 prev_log_term = 4;
    repeated LogEntry entries = 5;
    int64 leader_commit = 6;
    int64 leader_lease = 7; // leader_lease
}

message AppendEntriesResponse {
    int64 term = 1;
    bool success = 2;
    int64 last_log_index = 3;
}

message RequestVoteReq {
    int64 term = 1;
    int64 candidate_id = 2;
    int64 last_log_index = 3;
    int64 last_log_term = 4;
}

message RequestVoteResponse {
    int64 term = 1;
    bool vote_granted = 2;
    int64 leader_lease = 3;
}

message GetReq {
    string key = 1;
}

message GetResponse {
    bool success = 1;
    string value = 2;
    int32 leader_id = 3;
}

message SetReq {
    string key = 1;
    string value = 2;
}

message SetResponse {
    bool success = 1;
    int32 leader_id = 2;
}

service Raft {
    rpc AppendEntries(AppendEntriesReq) returns (AppendEntriesResponse);
    rpc RequestVote(RequestVoteReq) returns (RequestVoteResponse);
    rpc Get(GetReq) returns (GetResponse);
    rpc Set(SetReq) returns (SetResponse);
}
